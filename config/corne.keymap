/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        Gaming_layer {
            bindings = <&tog 3>;
            key-positions = <10 6 34 30>;
        };
    };

    behaviors {
        HrmL: HrmL {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 38 37 36>;
        };

        hrmr: hrmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HRMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q             &kp W             &kp F               &kp P                 &kp B        &kp J      &kp L                  &kp U                &kp Y              &kp SEMICOLON      &none
&none  &HrmL LEFT_GUI A  &HrmL LEFT_ALT R  &HrmL LEFT_SHIFT S  &HrmL LEFT_CONTROL T  &kp G        &kp M      &hrmr RIGHT_CONTROL N  &hrmr RIGHT_SHIFT E  &hrmr RIGHT_ALT I  &hrmr RIGHT_GUI O  &none
&none  &kp Z             &kp X             &kp C               &kp D                 &kp V        &kp K      &kp H                  &kp COMMA            &kp DOT            &kp FSLH           &none
                                           &lt 2 LWIN          &mo 1                 &kp ENTER    &kp ENTER  &kp SPACE              &kp RIGHT_CONTROL
            >;
        };

        layer_1 {
            bindings = <
&kp TAB        &kp TAB        &trans  &trans  &trans  &trans    &kp EQUAL  &kp N7  &kp N8  &kp N9  &trans   &trans
&kp BACKSPACE  &kp BACKSPACE  &trans  &trans  &trans  &trans    &kp MINUS  &kp N4  &kp N5  &kp N6  &kp RET  &trans
&kp LCTRL      &kp LCTRL      &trans  &trans  &trans  &trans    &trans     &kp N1  &kp N2  &kp N3  &kp DOT  &trans
                                      &trans  &trans  &trans    &trans     &trans  &kp N0
            >;
        };

        layer_2 {
            bindings = <
&kp F1  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans  &none   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&none  &kp Q      &none         &kp W         &kp E         &kp NUMBER_6    &none  &none  &none  &none  &none  &none
&none  &kp LCTRL  &kp A         &kp S         &kp D         &kp N5          &none  &none  &none  &none  &none  &none
&none  &kp LSHFT  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &none  &none  &none  &none  &none  &none
                                &none         &kp N7        &kp SPACE       &none  &none  &none
            >;
        };
    };
};
